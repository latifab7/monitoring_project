---

- name: configure our test instance
  hosts: test_instance
  remote_user: admin
  become: true
  vars:   
    domain_name : "test.istla.online" #"{{ lookup('env', 'DOMAIN_NAME_FRONT') }}" 

  tasks:

# STEP 1 : UPDATE SYSTEM

  - name: update system 
    ansible.builtin.apt:
      update_cache : yes

# STEP 2 : INSTALL NGinx
  - name: Copy nginx script to target
    copy:
      src: ../scripts/setup_nginx.sh
      dest: /opt/setup_nginx.sh
      mode: '0755'

  - name: Execute nginx installation 
    command: /opt/setup_nginx.sh 

# step 3 : REPLACE NGINX DEFAULT HTML BY OUR CUSTOM HTML

  - name: Copy custom HTML to replace default Nginx page
    copy:
      src: ../files/index.html
      dest: /usr/share/nginx/html/index.html
      owner: www-data
      group: www-data
      mode: '0644'

  - name: restart nginx 
    systemd:
      name: nginx
      state: reloaded


# STEP 4 :  SSL CERTIFICATE 

  - name: Install ssl
    apt:
      name: 
        - certbot
        - python3-certbot-nginx
      state: present

  - name: configure nginx as reverse proxy
    template:
      src: ../files/nginx_proxy.j2
      dest: /etc/nginx/sites-available/{{ domain_name }}

  - name: restart nginx service 
    command: systemctl restart nginx

  - name: enable nginx configuration 
    file: 
      src: /etc/nginx/sites-available/{{domain_name}}
      dest: /etc/nginx/sites-enabled/{{domain_name}}
      state: link 

  - name: restart nginx service 
    command: systemctl restart nginx

  - name: Remove default nginx config 
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent 

  - name: restart nginx service 
    command: systemctl restart nginx

# STEP 5 : OBTAIN SSL CERTIFICATE 

  # - name: obtain ssl certificate fot https 
  #   command: certbot --nginx -d {{ domain_name }} --non-interactive --agree-tos -m latifaboulil@hotmail.fr

  # - name: restart nginx 
  #   systemd:
  #     name: nginx
  #     state: reloaded
        





# FILE TESTED AND OK !!!